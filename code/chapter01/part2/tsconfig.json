{
  /*
    tsconfig.json 是 ts 编译器的配置文件，ts编译器可以根据它的信息来对代码进行编译
      include 用来指定哪些 ts 文件需要编译 
        路径 ** 表示任意目录
              * 表示任意文件
      exclude 不需要被编译的文件目录
        默认值 ["node_modules","bower_components","jspm_packages"]
  */
  "include": [
    "./src/**/*"
  ],
  // "exclude": [
  //   "./src/hello/**/*"
  // ]
  /*
    compilerOption 编译器的选项
  */
  "compilerOptions": {
    // target 用来指定ts被编译为es的版本
    "target": "ES3",
    // module 指定要使用的模块化的规范
    "module": "es2015",
    // lib 用来指定项目中要使用的库
    // "lib": ["es6", "DOM"]
    // outDir 用来指定编译后文件所在的目录
    "outDir": "./dist",
    // 将代码合并成一个文件
    // 设置outFile后，所有全局作用域中的代码会合并到一起
    // "outFile": "./dist/app.js"

    // 是否对js文件进行编译 默认 false
    "allowJs": true,
    // 是否检测js代码是否符合ts语法规则,默认为false
    "checkJs": true,
    // 是否剔除注释，默认为false
    "removeComments": true,

    // 不生成编译后文件
    "noEmit": false,
    // 当有错误时候就不生成编译后的文件
    "noEmitOnError": true,

    // 所有严格检查的总开关
    // strict 为 true 那么下面的四个都为true，为false都为false，都可单独设置
    "strict": true,

    // 是否设置编译后的文件的严格模式
    "alwaysStrict": true,

    // 不允许隐式的any
    "noImplicitAny": true,

    // 不允许不明确类型的this
    "noImplicitThis": true,

    // 严格的检查空值
    "strictNullChecks": true
  }
}